{"version":3,"sources":["webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.css","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.html","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.ts","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.css","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.html","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.ts","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.css","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","webpack:///./src/app/recipes/recipe-list/recipe-list.component.css","webpack:///./src/app/recipes/recipe-list/recipe-list.component.html","webpack:///./src/app/recipes/recipe-list/recipe-list.component.ts","webpack:///./src/app/recipes/recipe-start/recipe-start.component.css","webpack:///./src/app/recipes/recipe-start/recipe-start.component.html","webpack:///./src/app/recipes/recipe-start/recipe-start.component.ts","webpack:///./src/app/recipes/recipes-routing.module.ts","webpack:///./src/app/recipes/recipes.component.css","webpack:///./src/app/recipes/recipes.component.html","webpack:///./src/app/recipes/recipes.component.ts","webpack:///./src/app/recipes/recipes.modules.ts"],"names":[],"mappings":"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","file":"recipes-recipes-modules.js","sourcesContent":["import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\";\r\nimport { AuthService } from \"../auth.service\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n    constructor(private authService:AuthService){}\r\n    canActivate(route:ActivatedRouteSnapshot,state:RouterStateSnapshot){\r\n        return this.authService.isAuthenticated();\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <img [src]=\\\"recipe.imagePath\\\" alt=\\\"{{recipe.name}}\\\" class=\\\"img-responsive\\\" style=\\\"max-height:300px;\\\">\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>{{recipe.name}}</h1>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <div class=\\\"btn-group\\\" appDropdown>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\">\\n          Manage Recipe <span class=\\\"=caret\\\"></span>\\n        </button>\\n        <ul class=\\\"dropdown-menu\\\">\\n          <li><a (click)=\\\"onAddToShoppingList()\\\" style=\\\"cursor: pointer;\\\">Add Ingredieants to Shopping List</a></li>\\n          <li><a style=\\\"cursor: pointer;\\\" (click)=\\\"onEditRecipe()\\\">Edit Recipe</a></li>\\n          <li><a style=\\\"cursor: pointer;\\\"(click)=\\\"onDeleteRecipe()\\\">Delete Recipe</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    {{recipe.description}}\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n     <ul class=\\\"list-group\\\">\\n       <li class=\\\"list-group-item\\\" *ngFor=\\\"let ingredient of recipe.ingredients\\\">\\n         {{ingredient.name}} - {{ingredient.amount}}\\n\\n       </li>\\n     </ul>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.css']\n})\nexport class RecipeDetailComponent implements OnInit {\nrecipe:Recipe;\nid:number;\n  constructor(private recipeService:RecipeService,\n    private route:ActivatedRoute,\n    private router:Router) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      (params:Params)=>{\n        this.id = +params[\"id\"];\n        this.recipe=this.recipeService.getRecipe(this.id);\n      }\n    )\n  }\n  onAddToShoppingList(){\n    this.recipeService.addIngredientsToShoppingList(this.recipe.ingredients);\n  }\n  onEditRecipe()\n  {\n    this.router.navigate(['edit'],{relativeTo:this.route});\n  }\n  onDeleteRecipe()\n  {\n    this.recipeService.deleteRecipe(this.id);\n    this.router.navigate(['/recipes']);\n  }\n\n}\n","module.exports = \"input.ng-invalid.ng-touched,\\r\\ntextarea.ng-invalid.ng-touched {\\r\\n    border: 1px solid red;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <form [formGroup]=\\\"recipeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <button type=\\\"submit\\\" class=\\\" btn btn-success\\\" [disabled]=\\\"!recipeForm.valid\\\">Save</button>\\n          <button type=\\\"button\\\" class=\\\" btn btn-danger\\\" (click)=\\\"onCancel()\\\" >Cancel</button>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input type=\\\"text\\\" id=\\\"name\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\">\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"imagePath\\\">Image URL</label>\\n            <input type=\\\"text\\\" id=\\\"imagePath\\\" formControlName=\\\"imagePath\\\" class=\\\"form-control\\\" #imagePath>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <img [src]=\\\"imagePath.value\\\" class=\\\"img-responsive\\\"> \\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"description\\\">Description</label>\\n            <textarea type=\\\"text\\\" id=\\\"description\\\" class=\\\"form-control\\\" formControlName=\\\"description\\\" row=\\\"6\\\"></textarea>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\" formArrayName=\\\"ingredients\\\">\\n          <div class=\\\"row\\\" *ngFor=\\\"let ingredientCtrl of recipeForm.get('ingredients')['controls']; let i=index\\\"\\n            [formGroupName]=\\\"i\\\"\\n            style=\\\"margin-top:10px;\\\">\\n            <div class=\\\"col-xs-8\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\">\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n              <input type=\\\"number\\\"  class=\\\"form-control\\\" formControlName=\\\"amount\\\">\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n              <button type=\\\"button\\\" (click)=\\\"onDeleteIngredient(i)\\\" class=\\\"btn btn-danger\\\">X</button>\\n            </div>\\n          </div>\\n          <hr>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n              <button class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"onAddIngredient()\\\">Add Ingredient</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit {\nid:number;\neditMode=false;\nrecipeForm:FormGroup;\n  constructor(private route:ActivatedRoute,\n              private recipeService:RecipeService,\n              private router:Router) { }\n\n  ngOnInit() {\n    this.route.params\n    .subscribe(\n      (params:Params)=>{\n        this.id=+params['id'];\n        this.editMode=params['id']!=null;\n        this.initForm();\n      }\n    );\n  }\n\n  onSubmit()\n  {\n    if(this.editMode){\n      this.recipeService.updateRecipe(this.id,this.recipeForm.value)\n    }\n    else\n    {\n      this.recipeService.addRecipe(this.recipeForm.value);\n    }\n    this.onCancel();\n  }\n\n  onCancel()\n  {\n    this.router.navigate(['../'],{relativeTo:this.route});\n    //this.recipeForm.reset(true);\n  }\n\n  onAddIngredient()\n  {\n    (<FormArray>this.recipeForm.get('ingredients')).push(\n      new FormGroup({\n        'name':new FormControl(null,Validators.required),\n        'amount':new FormControl(null,[Validators.required,Validators.pattern(/^[1-9]+[0-9]*$/)])\n      })\n    );\n  }\n\n  onDeleteIngredient(index:number)\n  {\n    (<FormArray>this.recipeForm.get('ingredients')).removeAt(index);\n\n  }\n\n  private initForm(){\n    let recipeName='';\n    let recipeImagePath='';\n    let recipeDescription='';\n    let recipeIngredients=new FormArray([]);\n\n    if(this.editMode){\n      const recipe=this.recipeService.getRecipe(this.id);\n      recipeName=recipe.name;\n      recipeImagePath=recipe.imagePath;\n      recipeDescription=recipe.description;\n      if(recipe['ingredients']){\n        for(let ingredient of recipe.ingredients){\n          recipeIngredients.push(\n            new FormGroup({\n              'name':new FormControl(ingredient.name,Validators.required),\n              'amount':new FormControl(ingredient.amount,[Validators.required,Validators.pattern(/^[1-9]+[0-9]*$/)])\n            })\n          )\n        }\n      }\n    }\n    this.recipeForm=new FormGroup({\n      'name':new FormControl(recipeName,Validators.required),\n      'imagePath':new FormControl(recipeImagePath,Validators.required),\n      'description':new FormControl(recipeDescription,Validators.required),\n      'ingredients':recipeIngredients\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<a style=\\\"cursor:pointer;\\\" \\n[routerLink]=\\\"[index]\\\"\\nrouterLinkActive=\\\"active\\\"\\nclass=\\\"list-group-item clearfix\\\">\\n    <div class=\\\"pull-left\\\">\\n      <h4 class=\\\"list-group-item-heading\\\">{{recipe.name}}</h4>\\n      <p class=\\\"list-group-item-text\\\">{{recipe.description}}</p>\\n    </div>\\n    <span class=\\\"pull-right\\\">\\n      <img [src]=\\\"recipe.imagePath\\\" alt=\\\"{{recipe.name}}\\\" class=\\\"img-responsive\\\" style=\\\"max-height: 50px;\\\"> \\n    </span>\\n  </a>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Recipe } from '../../recipe.model';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css']\n})\nexport class RecipeItemComponent implements OnInit {\n @Input() recipe:Recipe;\n @Input() index:number;\n  ngOnInit() {\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"=row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"onNewRecipe()\\\">New Recipe</button>\\n  </div>\\n</div>\\n<hr>\\n<hr>\\n<hr>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <app-recipe-item  *ngFor=\\\"let recipEL of  recipes; let i=index\\\"\\n    [recipe]=\\\"recipEL\\\"\\n    [index]=\\\"i\\\"></app-recipe-item>\\n  </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport{Recipe} from '../recipe.model'\nimport {RecipeService} from '../recipe.service'\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit,OnDestroy {\n recipes:Recipe[];\n subscription:Subscription\n\n constructor(private recipeService:RecipeService,\n             private router:Router,\n             private route:ActivatedRoute) { }\n\n  ngOnInit() {\n   this.subscription= this.recipeService.recipesChanged.subscribe(\n      (recipes:Recipe[])=>{\n        this.recipes=recipes;\n      }\n    );\n    this.recipes=this.recipeService.getRecipes();\n  }\n  onNewRecipe()\n  {\n    this.router.navigate(['new'],{relativeTo:this.route});\n  }\n  ngOnDestroy(){\n  this.subscription.unsubscribe();\n  }\n}\n","module.exports = \"\"","module.exports = \"<h3>Please select a Recipe!</h3>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.css']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { RecipesComponent } from \"./recipes.component\";\r\nimport { RecipeStartComponent } from \"./recipe-start/recipe-start.component\";\r\nimport { RecipeEditComponent } from \"./recipe-edit/recipe-edit.component\";\r\nimport { RecipeDetailComponent } from \"./recipe-detail/recipe-detail.component\";\r\nimport { AuthGuard } from \"../auth/auth-guard.service\";\r\n\r\nconst recipesRoutes:Routes=[\r\n    {path:'',component:RecipesComponent,children:[\r\n        {path:'',component:RecipeStartComponent},\r\n        {path:'new',component:RecipeEditComponent,canActivate:[AuthGuard]},\r\n        {path:':id',component:RecipeDetailComponent},\r\n        {path:':id/edit',component:RecipeEditComponent,canActivate:[AuthGuard]},\r\n    ]},\r\n    \r\n];\r\n    \r\n@NgModule({\r\n    imports:[\r\n        RouterModule.forChild(recipesRoutes)\r\n    ],\r\n    exports:[\r\n        RouterModule\r\n    ],\r\n    providers:[AuthGuard]\r\n\r\n\r\n})\r\nexport class RecipesRoutingModule{\r\n\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <app-recipe-list></app-recipe-list>\\n  </div>\\n  <div class=\\\"col-md-7\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { RecipeService } from './recipe.service';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css']\n})\nexport class RecipesComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\n\r\nimport { Recipe } from \"./recipe.model\";\r\nimport { RecipesComponent } from \"./recipes.component\";\r\nimport { RecipeStartComponent } from \"./recipe-start/recipe-start.component\";\r\nimport { RecipeListComponent } from \"./recipe-list/recipe-list.component\";\r\nimport { RecipeEditComponent } from \"./recipe-edit/recipe-edit.component\";\r\nimport { RecipeDetailComponent } from \"./recipe-detail/recipe-detail.component\";\r\nimport { RecipeItemComponent } from \"./recipe-list/recipe-item/recipe-item.component\";\r\nimport { RecipesRoutingModule } from \"./recipes-routing.module\";\r\nimport { SharedModule } from \"../shared/shared.module\";\r\n    \r\n    @NgModule({\r\n        declarations:[\r\n            RecipesComponent,\r\n            RecipeStartComponent,\r\n            RecipeListComponent,\r\n            RecipeEditComponent,\r\n            RecipeDetailComponent,\r\n            RecipeItemComponent,\r\n        ],\r\n        imports:[\r\n            CommonModule,\r\n            ReactiveFormsModule,\r\n            RecipesRoutingModule,\r\n            SharedModule\r\n        ]\r\n\r\n    })\r\n    export class RecipesModule{}"],"sourceRoot":""}